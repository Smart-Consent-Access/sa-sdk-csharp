/*
 * @ao/ah-api
 *
 * Telia Association Hub API
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using SmartAccess.Client;
using SmartAccess.Api;
// uncomment below to import models
//using SmartAccess.Model;

namespace SmartAccess.Test.Api
{
    /// <summary>
    ///  Class for testing BackofficeInternalAdminApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class BackofficeInternalAdminApiTests : IDisposable
    {
        private BackofficeInternalAdminApi instance;

        public BackofficeInternalAdminApiTests()
        {
            instance = new BackofficeInternalAdminApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BackofficeInternalAdminApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' BackofficeInternalAdminApi
            //Assert.IsType<BackofficeInternalAdminApi>(instance);
        }

        /// <summary>
        /// Test DeleteConsentRequest
        /// </summary>
        [Fact]
        public void DeleteConsentRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string consentRequestId = null;
            //instance.DeleteConsentRequest(consentRequestId);
        }

        /// <summary>
        /// Test DeleteServiceProvider
        /// </summary>
        [Fact]
        public void DeleteServiceProviderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string serviceProviderId = null;
            //instance.DeleteServiceProvider(serviceProviderId);
        }

        /// <summary>
        /// Test GetAll
        /// </summary>
        [Fact]
        public void GetAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAll();
            //Assert.IsType<List<ServiceProviderDTO>>(response);
        }

        /// <summary>
        /// Test GetAllConsentRequests
        /// </summary>
        [Fact]
        public void GetAllConsentRequestsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllConsentRequests();
            //Assert.IsType<List<ConsentRequestSummaryDTO>>(response);
        }

        /// <summary>
        /// Test GetAllConsents
        /// </summary>
        [Fact]
        public void GetAllConsentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllConsents();
            //Assert.IsType<List<ConsentDTO>>(response);
        }

        /// <summary>
        /// Test GetDebug
        /// </summary>
        [Fact]
        public void GetDebugTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetDebug();
            //Assert.IsType<DebugDTO>(response);
        }

        /// <summary>
        /// Test PostServiceProviders
        /// </summary>
        [Fact]
        public void PostServiceProvidersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ServiceProviderDTO serviceProviderDTO = null;
            //var response = instance.PostServiceProviders(serviceProviderDTO);
            //Assert.IsType<ServiceProviderDTO>(response);
        }
    }
}
